version: '3.4'

volumes:
  pg_data:


services:
  db:
    container_name: db
    image: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    ports:
      - 5432:5432

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: DockerFile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/app/
    ports:
      - 8000:8000
      - 5678:5678
    env_file:
      - ./backend/.env
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: DockerFile
    command: npm start
    volumes:
      - ./frontend/:/app/
      - /app/node_modules
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    env_file:
      - ./frontend/.env

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379

  celery-worker:
    container_name: celery-worker
    build:
      context: ./backend
      dockerfile: DockerFile
    command: celery -A settings worker -l info
    volumes:
      - ./backend/:/app/
    env_file:
      - ./backend/.env
    depends_on:
      - redis

  celery-beat:
    container_name: celery-beat
    build:
      context: ./backend
      dockerfile: DockerFile
    command: celery -A settings beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend/:/app/
    env_file:
      - ./backend/.env
    depends_on:
      - redis
